#!/bin/sh

# tmux-swprefix
# Helper for using tmux over ssh in tmux (over ssh in tmux)

# Copyright (c) 2023  Benjamin Althues <benjamin@babab.nl>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# SPDX-License-Identifier: ISC

_name_version="tmux-swprefix v0.1"

_help() {
    echo "usage: tmux-swprefix [option]"
    echo
    echo 'Helper for using tmux over ssh in tmux (over ssh in tmux).'
    echo
    echo Switch the prefix key of a running tmux session and indicate
    echo it by updating the background color of the status bar.
    echo
    echo Options:
    echo "-h, --help      show this help information"
    echo "-V, --version   show version information"
    echo "-1, -b,         switch to preset 1 / set prefix key to C-b"
    echo "-2, -a,         switch to preset 2 / set prefix key to C-a"
    echo "-3, -t,         switch to preset 3 / set prefix key to C-t"
    echo "-n, --next      cycle through presets / prefix keys"
    echo
    echo \# Why use this?
    echo When you are in a tmux session and want to ssh into a server
    echo and use tmux there, it is easily enough to change the
    echo "prefix-key in '.tmux.conf' on one of the machines so they"
    echo "don't clash with eachother by responding to the same key"
    echo commands.
    echo
    echo But when you add another layer of tmux/ssh/server or like to
    echo mix things up, this can get tricky. The config is rigid in the
    echo way that it can support *only one* of multiple ways that these
    echo machines are able to be linked up with eachother.
    echo
    echo 'This script is created to have a flexible way to "nest" tmux'
    echo though ssh, 3 layers deep. It sets the prefix key of a running
    echo tmux session and indicates it by updating the background color
    echo of the status bar.
}

_check_tmux_env() {
    test -n "$TMUX" && return 0
    echo 'error: Only available when used in a tmux session'
    return 1

}

_xdg_data_file() {
    case $1 in
        *'/'*)
            echo 'script error: filename can not be a path' \
                > /dev/stderr
            return 1;;
        '')
            echo 'script error: _xdg_data_file needs an argument: filename' \
                > /dev/stderr
            return 1;;
    esac
    if test -n "$XDG_DATA_HOME"; then
        _data_dir="$XDG_DATA_HOME/tmux-swprefix"
    else
        _data_dir="$HOME/.local/share/tmux-swprefix"
    fi
    if test ! -d "$_data_dir"; then
        if ! mkdir -p "$_data_dir"; then
            echo 'error: can not create directory' "$_data_dir" \
                > /dev/stderr
            return 2
        fi
    fi
    echo "$_data_dir/$1"
    return 0
}

_save_next_preset() {
    _umask_orig="$(umask)"
    umask 077
    echo "$1" >| "$_preset_filename"
    umask "$_umask_orig"
}

_apply_preset() {
    # get or set $_preset
    if test -n "$1"; then
        _preset="$1"
    else
        if test -f "$_preset_filename"; then
            _preset="$(cat "$_preset_filename")"
        fi
        # use preset 1 as a defaut init value and failsafe
        test -z "$_preset" && _preset=1
    fi
    # perform actions tied to preset
    case $_preset in
        1)
            _save_next_preset 2
            tmux set-option -g prefix C-b
            tmux unbind-key C-a
            tmux unbind-key C-t
            tmux bind-key C-b send-prefix
            tmux set-option -g status-style fg=black,bg=green
            echo 'prefix-key is now C-b'
            ;;
        2)
            _save_next_preset 3
            tmux set-option -g prefix C-a
            tmux unbind-key C-b
            tmux unbind-key C-t
            tmux bind-key C-a send-prefix
            tmux set-option -g status-style fg=white,bg=blue
            echo 'prefix-key is now C-a'
            ;;
        3)
            _save_next_preset 1
            tmux set-option -g prefix C-t
            tmux unbind-key C-b
            tmux unbind-key C-a
            tmux bind-key C-t send-prefix
            tmux set-option -g status-style fg=black,bg=yellow
            echo 'prefix-key is now C-t'
            ;;
    esac
}

_main() {
    _preset_filename="$(_xdg_data_file 'next_preset')" || return $?

    case $1 in
        -b | -1) _check_tmux_env && _apply_preset 1;;
        -a | -2) _check_tmux_env && _apply_preset 2;;
        -t | -3) _check_tmux_env && _apply_preset 3;;
        -n | --next) _check_tmux_env && _apply_preset;;
        -V | --v*) echo "$_name_version"; return 0;;
        *) _help; return 0;;
    esac
}

_main "$@"
