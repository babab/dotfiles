#!/bin/sh

# vii
# Wrapper for editing files in the most fitting way possible,
# depending on: terminal size, environment and number of files.

# ISC License
#
# Copyright (c) 2016-2023  Benjamin Althues <benjamin@babab.nl>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# Start emacs/vim with a tab/pane layout and sudo if root
#
# 1. Check if file is owned by root and prefix sudo if applicable.
# 2. Use emacsclient to try to open the files in a new Emacs window
#    if a server is running,
# 3. Check to see if vim is available under the vim command, if not
#    check for vi or else exit with status code 3.
# 4. Start Vim with a pane/tab layout adapted to the current terminal
#    when more then one file is given as argument.
#
# Error codes:
# 0 - success
# 1 - wrong argument
# 2 - file not owned by root or $USER
# 3 - vim, vi and /bin/vi are not found

if test -z "$1"; then
    echo "error: missing arguments"
    echo
    echo 'usage: vii <file1> [<file2>] [<file3>] [...] '
    exit 1
fi

# check to see if file is owned by root and set $_sudo if so
# N.B. only the first file in $@ is checked
_sudo=''
_file_owner="$(stat -c %U "$1")" # TODO: update for pdksh
if [ "$_file_owner" = 'root' ]; then
    echo file is owned by root, using sudo
    sleep 1
    command -v sudo >/dev/null && _sudo='sudo'
elif [ "$_file_owner" != "$USER" ]; then
    echo file is not owned by root or you, stopping
    exit 2
fi

# If this works, then exit 0, we don't need vim
${_sudo} emacsclient -q -n "$@" 2>/dev/null && exit 0

# Check to see if vim is available, else try to fall back on vi
if ! command -v vim >/dev/null; then
    if command -v vi >/dev/null; then
        ${_sudo} vi "$@"
    elif command -v /bin/vi >/dev/null; then
        ${_sudo} /bin/vi "$@"
    else
        echo error: vim, vi and /bin/vi are not found.
        exit 3
    fi
fi

# Open files in tabs or vertical/horizontal splits depending on
# number of files and number of columns available in terminal
if [ $# -eq 1 ]; then
    ${_sudo} vim "$@"
elif [ $# -eq 2 ]; then
    if [ "$(tput cols)" -lt 80 ]; then
        ${_sudo} vim -p "$@"
    elif [ "$(tput cols)" -lt 191 ]; then
        ${_sudo} vim -o "$@"
    else
        ${_sudo} vim -O "$@"
    fi
elif [ $# -ge 3 ]; then
    ${_sudo} vim -p "$@"
fi
